---
# Source: pattern-install/templates/argocd/namespace.yaml
# Pre-create so we can create our argo app for keeping subscriptions in sync
# Do it here so that we don't try to sync it in the future
apiVersion: v1
kind: Namespace
metadata:
  name: openshift-gitops
---
# Source: pattern-install/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: manuela-ci
  labels:
    manuela-role: pipeline
    app.kubernetes.io/instance: manuela
---
# Source: pattern-install/templates/pipeline/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline
  namespace: manuela-ci
secrets:
- name: git-repo-credentials
- name: image-registry-credentials
---
# Source: pattern-install/templates/secrets/s3-secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: s3-secret
type: Opaque
data:
  # Pre-create as part of the initial 'helm install' chart
  # Create a file with the following:
  #  s3.accessKey: KEY
  #  s3.secretKey: secret key
  #application.properties: base64 encrypted value of the above file
  # This should live in the values-secret.yaml file
  application.properties: BASE64STRING
---
# Source: pattern-install/templates/secrets/secret-git-repo-credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: git-repo-credentials
  namespace: manuela-ci
  annotations:
    # Tekton magic, see https://tekton.dev/vault/pipelines-v0.15.2/auth/
    tekton.dev/git-0: https://github.com/hybrid-cloud-patterns
type: kubernetes.io/basic-auth
stringData:
  username: STRING
  password: STRING
---
# Source: pattern-install/templates/secrets/secret-image-registry-credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: openshift-registry-credentials
  namespace: manuela-ci
  annotations:
    # Tekton magic, see https://tekton.dev/vault/pipelines-v0.15.2/auth/
    tekton.dev/docker-0: "https://"
type: kubernetes.io/basic-auth
stringData:
  username: STRING
  password: STRING
---
# Source: pattern-install/templates/argocd/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: common-example
  namespace: openshift-gitops
spec:
  destination:
    name: in-cluster
    namespace: common-example
  project: default
  source:
    repoURL:  https://github.com/beekhof/common.git
    targetRevision: main
    path: common/clustergroup
    helm:
      valueFiles:
      - "https://github.com/beekhof/patterns/raw/main/values-global.yaml"
      - "https://github.com/beekhof/patterns/raw/main/values-example.yaml"
      # Track the progress of https://github.com/argoproj/argo-cd/pull/6280
      parameters:
        - name: global.repoURL
          value: $ARGOCD_APP_SOURCE_REPO_URL
        - name: global.targetRevision
          value: $ARGOCD_APP_SOURCE_TARGET_REVISION
        - name: global.namespace
          value: $ARGOCD_APP_NAMESPACE
        - name: global.valuesDirectoryURL
          value: https://github.com/beekhof/patterns/raw/main
        - name: global.pattern
          value: common
  syncPolicy:
    automated: {}
---
# Source: pattern-install/templates/argocd/subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: openshift-gitops-operator
  namespace: openshift-operators
  labels:
    operators.coreos.com/openshift-gitops-operator.openshift-operators: ""
spec:
  channel: stable
  installPlanApproval: Automatic
  name: openshift-gitops-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
