{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/valuesSecretsV2",
  "meta:license": [
    "Copyright 2022 Red Hat, Inc. All rights reserved.",
    "This file is licensed to you under the Apache License, Version 2.0 (the 'License');",
    "you may not use this file except in compliance with the License. You may obtain a copy",
    "of the License at http://www.apache.org/licenses/LICENSE-2.0"
  ],
  "title": "Hybrid Cloud Patterns - values-secret.yaml files schema V2",
  "description": "This schema defines the values-secret.yaml file as used by [Validated Patterns](https://hybrid-cloud-patterns.io)",
  "type": "object",
  "examples": [
    {
      "version": "2.0",
      "backingStore": "vault",
      "vaultPolicies": {
        "basicPolicy": "length=10\nrule \"charset\" { charset = \"abcdefghijklmnopqrstuvwxyz\" min-chars = 1 }\nrule \"charset\" { charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" min-chars = 1 }\nrule \"charset\" { charset = \"0123456789\" min-chars = 1 }\n",
        "advancedPolicy": "length=20\nrule \"charset\" { charset = \"abcdefghijklmnopqrstuvwxyz\" min-chars = 1 }\nrule \"charset\" { charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" min-chars = 1 }\nrule \"charset\" { charset = \"0123456789\" min-chars = 1 }\nrule \"charset\" { charset = \"!@#$%^&*\" min-chars = 1 }\n"
      },
      "secrets": [
        {
          "name": "config-demo",
          "vaultMount": "secret",
          "vaultPrefixes": [
            "region-one",
            "snowflake.blueprints.rhecoeng.com"
          ],
          "fields": [
            {
              "name": "secret",
              "onMissingValue": "generate",
              "override": true,
              "vaultPolicy": "basicPolicy"
            },
            {
              "name": "secretprompt",
              "value": null,
              "onMissingValue": "prompt",
              "prompt": "Please specify the password for application ABC"
            },
            {
              "name": "secretprompt2",
              "value": "defaultvalue",
              "onMissingValue": "prompt",
              "prompt": "Please specify the API key for XYZ"
            },
            {
              "name": "secretfile",
              "path": "/tmp/ca.crt",
              "onMissingValue": "prompt",
              "prompt": "Insert path to Certificate Authority"
            },
            {
              "name": "ca_crt",
              "path": "/tmp/ca.crt",
              "onMissingValue": "error"
            },
            {
              "name": "ca_crt_b64",
              "path": "/tmp/ca.crt",
              "base64": true,
              "onMissingValue": "prompt"
            }
          ]
        },
        {
          "name": "config-demo2",
          "vaultPrefixes": [
            "region-one",
            "snowflake.blueprints.rhecoeng.com"
          ],
          "fields": [
            {
              "name": "ca_crt2",
              "path": null,
              "onMissingValue": "prompt"
            },
            {
              "name": "ca_crt",
              "path": "/tmp/ca.crt",
              "onMissingValue": "error"
            }
          ]
        }
      ]
    }
  ],
  "definitions": {
    "valuesSecretsV2": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "version": {
          "type": [ "string", "null" ],
          "description": "Version of the secret specification",
          "default": "1.0"
        },
        "backingStore": {
          "type": "string",
          "description": "Secrets backing store type",
          "default": "vault"
        },
        "vaultPolicies": {
          "$ref": "#/definitions/VaultPolicies",
          "description": "A dictionary of {name}:{policy} of custom vault password policies"
        },
        "secretStoreNamespace": {
          "type": "string",
          "description": "Namespace to store secrets in for kubernetes loader",
          "default": "validated-patterns-secrets"
        },
        "defaultLabels": {
          "type": "object",
          "description": "Default labels to add to secret objects for kubernetes loader"
        },
        "defaultAnnotations": {
          "type": "object",
          "description": "Default labels to add to secret objects for kubernetes loader"
        },
        "secrets": {
          "$ref": "#/definitions/Secrets",
          "description": "The list of actual secrets to be uploaded in the vault"
        }
      },
      "required": [
        "secrets"
      ],
      "title": "Values Secrets V2 Format"
    },
    "VaultPolicies": {
      "type": "object",
      "description": "A dictionary of {name}:{policy} of custom vault password policies",
      "items": {
        "$ref": "#/definitions/VaultPolicy"
      },
      "examples": [
        {
          "vaultPolicies": {
            "basicPolicy": "length=10\nrule \"charset\" { charset = \"abcdefghijklmnopqrstuvwxyz\" min-chars = 1 }\nrule \"charset\" { charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" min-chars = 1 }\nrule \"charset\" { charset = \"0123456789\" min-chars = 1 }\n",
            "advancedPolicy": "length=20\nrule \"charset\" { charset = \"abcdefghijklmnopqrstuvwxyz\" min-chars = 1 }\nrule \"charset\" { charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" min-chars = 1 }\nrule \"charset\" { charset = \"0123456789\" min-chars = 1 }\nrule \"charset\" { charset = \"!@#$%^&*\" min-chars = 1 }\n"
          }
        }
      ]
    },
    "VaultPolicy": {
      "type": "string",
      "description": "A password policy to be created in the vault. See https://developer.hashicorp.com/vault/docs/concepts/password-policies"
    },
    "Secrets": {
      "type": "array",
      "description": "The list of secrets to be injected into the vault",
      "items": {
        "$ref": "#/definitions/Secret"
      }
    },
    "Secret": {
      "type": "object",
      "description": "The single secret to be injected into the vault",
      "additionalProperties": false,
      "required": [ "name", "fields" ],
      "properties": {
        "name": {
          "type": "string",
          "description": "This is the name of the top level key that will be created at the vaultMount point and that will contain one secret per field inside its attributes"
        },
        "vaultMount": {
          "type": "string",
          "description": "This is the vault -mount=<...> mount point used in vault commands",
          "default": "secret"
        },
        "vaultPrefixes": {
          "type": "array",
          "description": "This is the list of prefixes the secret will be uploaded to. It defaults to ['hub'] when not specified",
          "items": {
            "type": "string",
            "minItems": 1,
            "uniqueItems": true
          },
          "default": [ "hub" ]
        },
        "targetNamespaces": {
          "type": "array",
          "description": "The namespace(s) that the secret will be injected into, ignored by configs using ESO",
          "items": {
            "type": "string",
            "minItems": 1,
            "uniqueItems": true
          }
        },
        "annotations": {
          "type": "object",
          "description": "Annotations to add to the kubernetes secret object, which override defaults"
        },
        "labels": {
          "type": "object",
          "description": "Labels to add to the kubernetes secret object, which override defaults"
        },
        "fields": {
          "type": "array",
          "description": "This is the list of actual secret material that will be placed in a vault key's attributes",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Field",
            "minItems": 1,
            "uniqueItems": true
          }
        }
      }
    },
    "Field": {
      "type": "object",
      "additionalProperties": false,
      "required": [
         "name"
       ],
      "properties": {
        "name": {
          "type": "string",
          "description": "This is the name of the attribute inside vault"
         },
         "onMissingValue": {
          "type": "string",
          "default": "error",
          "description": "'error' will generate an error if the secret (via value or via path attributes) are not defined. 'generate' will create a secret using a defined vaultPolicy. 'prompt' will ask the user for input and it requires to set a value or a path depending if the user should input a secret or a path to a secret file. Non-null entries represent the default value when prompted.",
          "enum": [
            "error",
            "generate",
            "prompt"
          ]
         },
         "prompt": {
           "type": "string",
           "description": "Represents the prompt used when onMissingValue is set to prompt"
         },
         "value": {
           "type": [
             "string",
             "null"
           ],
           "description": "Is the value of a secret. Represents the default value when onMissingValue is set to prompt"
         },
         "path": {
           "type": [
             "string",
             "null"
           ],
           "description": "Is the path to a secret file. Represents the default path when onMissingValue is set to prompt"
         },
         "ini_file": {
           "type": [
             "string",
             "null"
           ],
           "description": "Is the path to an ini_file containing secret material"
         },
         "ini_section": {
           "type": [
             "string",
             "null"
           ],
           "description": "Is the section in an ini file where a user-defined key will be looked up",
           "default": "default"
         },
         "ini_key": {
           "type": [
             "string",
             "null"
           ],
           "description": "Is the key inside a section in an inifile whose value will be used"
         },
         "vaultPolicy": {
           "type": "string",
           "description": "When onMissingValue is set to 'generate', uses this policy to create the secret inside the vault directly"
         },
         "base64": {
           "type": "boolean",
           "description": "Before uploading the secret the content is base-64 encoded. It is recommended to set this to true when dealing with files",
           "default": "false"
         },
         "override": {
           "type": "boolean",
           "description": "When onMissingValue is set to 'generate' and the secret already exists in the vault update it",
           "default": "false"
         }
      },
      "dependentRequired": {
        "ini_file": ["ini_key"]
      },
      "allOf": [
        {
          "if": {
            "properties": { "onMissingValue": { "enum": ["prompt"] } }
          },
          "then": {
            "oneOf": [
              {
                "required": [ "path" ]
              },
              {
                "required": [ "value" ]
              }
            ]
          }
        },
        {
          "if": {
            "properties": { "onMissingValue": { "enum": ["generate"] } }
          },
          "then": {
            "required": [ "vaultPolicy" ]
          }
        },
        {
          "if": {
            "properties": { "onMissingValue": { "enum": ["error"] } }
          },
          "then": {
            "oneOf": [
              {
                "required": [ "path" ]
              },
              {
                "required": [ "ini_file" ]
              },
              {
                "required": [ "value" ]
              }
            ]
          }
        }
      ]
    }
  }
}
