---
- name: "Do pre-checks for Vault"
  ansible.builtin.include_role:
    name: vault_utils
    tasks_from: vault_status

# Unfortunately we cannot loop vault_status and just check if the vault is unsealed
# https://github.com/ansible/proposals/issues/136
# So here we keep running the 'vault status' command until sealed is set to false
- name: If the vault is still sealed we need to retry
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: vault status -format=json
  register: vault_status_json
  until: "'stdout' in vault_status_json and (not (vault_status_json.stdout | from_json)['sealed'] | bool)"
  retries: 20
  delay: 45
  failed_when: "'stdout_lines' not in vault_status_json"

# This step is not really needed when running make vault-init + load-secrets as
# everything is sequential
# It is needed when the vault is unsealed/configured inside the cluster and load-secrets
# gets run *while* the cronjob configures the vault. I.e. it might be half configured and return
# errors
- name: Make sure that the vault auth policy exists
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command:
      sh -c "vault list auth/{{ vault_hub }}/role | grep '{{ vault_hub }}-role'"
  register: vault_role_cmd
  until:
    - vault_role_cmd.rc is defined
    - vault_role_cmd.rc == 0
  retries: 20
  delay: 45
  changed_when: false

- name: Load parsed secrets into cluster vault
  vault_load_parsed_secrets:
    vault_policies: "{{ vault_policies }}"
    parsed_secrets: "{{ parsed_secrets }}"
