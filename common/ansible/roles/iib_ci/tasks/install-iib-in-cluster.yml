- name: Set IIB local folder fact
  ansible.builtin.set_fact:
    iib_local_folder: "/tmp/manifest-{{ item.value['iib'] }}"

- name: Remove manifest folder "{{ iib_local_folder }}"
  ansible.builtin.file:
    path: "{{ iib_local_folder }}"
    state: absent

- name: Create manifest folder "{{ iib_local_folder }}"
  ansible.builtin.file:
    path: "{{ iib_local_folder }}"
    state: directory
    mode: "0755"

# This generates files in /tmp/manifest-IIB:
# - mapping.txt
# - catalogSource.yaml
# - imageContentSourcePolicy.yaml
- name: Mirror catalog manifests only to "{{ iib_local_folder }}"
  ansible.builtin.shell: |
    oc adm catalog mirror --insecure --manifests-only --to-manifests=. \
      "{{ item.value['iib_image'] }}" "{{ rh_internal_registry }}/rh-osbs" > catalog.log 2>&1
  args:
    chdir: "{{ iib_local_folder }}"

- name: Mirror IIB to "{{ mirror_iib }}"
  ansible.builtin.shell: |
    oc image mirror -a "{{ pull_secrets_tempfolder.path }}/.dockerconfigjson" \
      "{{ item.value['iib_image'] }}={{ mirror_iib }}" --insecure --keep-manifest-list 2>&1
  args:
    chdir: "{{ iib_local_folder }}"
  register: oc_mirror_result
  retries: 10
  delay: 5
  until: oc_mirror_result is not failed

- name: Template mirrored catalogsource
  ansible.builtin.template:
    src: ./templates/catalogSource.yaml.j2
    dest: "{{ iib_local_folder }}/mirrored-catalogsource.yaml"
    mode: "0644"

- name: Apply mirrored catalogsource
  ansible.builtin.shell: |
    oc apply -f "{{ iib_local_folder }}/mirrored-catalogsource.yaml"

- name: Wait for catalogsource to show up
  ansible.builtin.shell: |
    oc get -n "{{ internal_registry_ns }}" packagemanifests -l "catalog=iib-{{ item.value['iib'] }}" --field-selector "metadata.name={{ item.key }}" \
      -o jsonpath='{.items[0].status.defaultChannel}'
  register: oc_catalogsource_result
  retries: 30
  delay: 10
  until: oc_catalogsource_result is not failed
  changed_when: false
