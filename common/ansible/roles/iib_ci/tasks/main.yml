- name: Check for pre-requisite binaries presence
  ansible.builtin.shell: |
    which "{{ item }}"
  with_items:
    - skopeo
    - oc
    - podman

- name: Check that INDEX_IMAGES env variable is set
  ansible.builtin.fail:
    msg: "INDEX_IMAGES: '{{ iib_images }}' is not set"
  failed_when:
    (iib_images is not defined or iib_images | length == 0)

- name: Get cluster version
  # E.g. 4.13.0-rc.6 or 4.12.16
  ansible.builtin.shell: |
    oc get openshiftcontrollermanager/cluster -o yaml -o jsonpath='{.status.version}'
  register: oc_version_raw
  retries: 10
  delay: 10
  until: oc_version_raw is not failed
  changed_when: false

- name: Is OCP pre OCP 4.13? (aka registry supports v2 manifests)
  ansible.builtin.set_fact:
    ocp_413: "{{ oc_version_raw.stdout is version('4.13', '>=') }}"

- name: Fail if OCP < 4.13 as we do not support it for IIB testing any longer
  ansible.builtin.fail:
    msg: "OCP versions < 4.13 are not support for IIB loading"
  when: not ocp_413

- name: Set images array
  ansible.builtin.set_fact:
    iib_image_list: "{{ iib_images.split(',') }}"

- name: Set operator array
  ansible.builtin.set_fact:
    operator_list: "{{ operator.split(',') }}"

# Creates a dict like:
# "advanced-cluster-management": {
#   "iib": "713808",
#   "iib_image": "registry-proxy.engineering.redhat.com/rh-osbs/iib:713808"
# },
# "multicluster-engine": {
#   "iib": "713809",
#   "iib_image": "registry-proxy.engineering.redhat.com/rh-osbs/iib:713809"
# }
- name: Set IIB dict
  ansible.builtin.set_fact:
    iib_dict: "{{ iib_dict | default({}) | combine({item.0: {'iib_image': item.1, 'iib': item.1.split(':')[-1]}}) }}"
  with_together:
    - "{{ operator_list }}"
    - "{{ iib_image_list }}"

- name: Working with the following IIB data
  ansible.builtin.debug:
    msg: "{{ iib_dict }}"

- name: Set up internal registry (OCP >= 4.13)
  ansible.builtin.include_tasks: setup-internal-registry.yml

- name: Install new IIB in cluster
  ansible.builtin.include_tasks: install-iib-in-cluster.yml
  with_items: "{{ iib_dict | dict2items }}"

- name: Mirror all related images
  ansible.builtin.include_tasks: mirror-related-images.yml
  with_items: "{{ iib_dict | dict2items }}"

- name: Remove pullsecrets tempfolder
  ansible.builtin.file:
    path: "{{ pull_secrets_tempfolder.path }}"
    state: absent
