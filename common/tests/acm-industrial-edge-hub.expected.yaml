---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
# This pushes out the HUB's Certificate Authorities on to the imported clusters
---
# Source: acm/templates/multiclusterhub.yaml
apiVersion: operator.open-cluster-management.io/v1
kind: MultiClusterHub
metadata:
  name: multiclusterhub
  namespace: open-cluster-management
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    installer.open-cluster-management.io/mce-subscription-spec: '{"source": "redhat-operators" }'
spec: {}
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: acm-hub-ca-policy-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: acm-hub-ca-policy-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: acm-hub-ca-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: factory-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: factory-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: factory-clustergroup-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/ocp-gitops-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: openshift-gitops-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: openshift-gitops-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: openshift-gitops-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: acm-hub-ca-policy-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: local-cluster
        operator: NotIn
        values:
          - 'true'
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: factory-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector: {
  "matchExpressions": [
    {
      "key": "vendor",
      "operator": "In",
      "values": [
        "OpenShift"
      ]
    }
  ],
  "matchLabels": {
    "clusterGroup": "factory"
  }
}
---
# Source: acm/templates/policies/ocp-gitops-policy.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: openshift-gitops-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: vendor
        operator: In
        values:
          - OpenShift
      - key: local-cluster
        operator: NotIn
        values:
          - 'true'
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-hub-ca-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acm-hub-ca-config-policy
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: Secret
                apiVersion: v1
                type: Opaque
                metadata:
                  name: hub-ca
                  namespace: imperative
                data:
                  hub-kube-root-ca.crt: '{{hub fromConfigMap "" "kube-root-ca.crt" "ca.crt" | base64enc hub}}'
                  hub-openshift-service-ca.crt: '{{hub fromConfigMap "" "openshift-service-ca.crt" "service-ca.crt" | base64enc hub}}'
---
# Source: acm/templates/policies/application-policies.yaml
# TODO: Also create a GitOpsCluster.apps.open-cluster-management.io
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: factory-clustergroup-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: factory-clustergroup-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                apiVersion: argoproj.io/v1alpha1
                kind: Application
                metadata:
                  name: mypattern-factory
                  namespace: openshift-gitops
                  finalizers:
                  - resources-finalizer.argocd.argoproj.io/foreground
                spec:
                  project: default
                  source:
                    repoURL: https://github.com/pattern-clone/mypattern
                    targetRevision: main
                    path: common/clustergroup
                    helm:
                      ignoreMissingValueFiles: true
                      valueFiles:
                        - "/values-global.yaml"
                        - "/values-factory.yaml"
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}.yaml'
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}-{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}.yaml'
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}-factory.yaml'
                        # We cannot use $.Values.global.clusterVersion because that gets resolved to the
                        # hub's cluster version, whereas we want to include the spoke cluster version
                        - '/values-{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}-factory.yaml'
                      parameters:
                      - name: global.repoURL
                        value: $ARGOCD_APP_SOURCE_REPO_URL
                      - name: global.targetRevision
                        value: $ARGOCD_APP_SOURCE_TARGET_REVISION
                      - name: global.namespace
                        value: $ARGOCD_APP_NAMESPACE
                      - name: global.pattern
                        value: mypattern
                      - name: global.hubClusterDomain
                        value: apps.hub.example.com
                      - name: global.localClusterDomain
                        value: '{{ (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain }}'
                      # Requires ACM 2.6 or higher
                      - name: global.clusterDomain
                        value: '{{ (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain | replace "apps." "" }}'
                      # Requires ACM 2.6 or higher (I could not come up with something less terrible to get maj.min)
                      - name: global.clusterVersion
                        value: '{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}'
                      - name: global.localClusterName
                        value: '{{ (split "." (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain)._1 }}'
                      - name: global.clusterPlatform
                        value: aws
                      - name: clusterGroup.name
                        value: factory
                      - name: clusterGroup.isHubCluster
                        value: "false"
                  destination:
                    server: https://kubernetes.default.svc
                    namespace: mypattern-factory
                  syncPolicy:
                    automated:
                      prune: false
                      selfHeal: true
                    retry:
                      limit: 20
                  ignoreDifferences:
                  - group: apps
                    kind: Deployment
                    jsonPointers:
                    - /spec/replicas
                  - group: route.openshift.io
                    kind: Route
                    jsonPointers:
                    - /status
---
# Source: acm/templates/policies/ocp-gitops-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: openshift-gitops-policy
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.DS Data Security
    policy.open-cluster-management.io/controls: PR.DS-1 Data-at-rest
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  name: openshift-gitops-operator
                  namespace: openshift-operators
                  labels:
                    operators.coreos.com/openshift-gitops-operator.openshift-operators: ''
                spec:
                  channel: gitops-1.8
                  installPlanApproval: Automatic
                  name: openshift-gitops-operator
                  source: redhat-operators
                  sourceNamespace: openshift-marketplace
                  config:
                    env:
                      - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
                        value: "*"
