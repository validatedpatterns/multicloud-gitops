---
# Source: acm/templates/provision/secrets-common.yaml
apiVersion: v1
kind: Secret
metadata:
  name: aws-ap-acm-provision-edge-install-config
data:
  # Base64 encoding of install-config yaml
  install-config.yaml: CgphcGlWZXJzaW9uOiB2MQptZXRhZGF0YToKICBuYW1lOiAnYXdzLWFwJyAKYmFzZURvbWFpbjogYmx1ZXByaW50cy5yaGVjb2VuZy5jb20KY29udHJvbFBsYW5lOgogIGFyY2hpdGVjdHVyZTogYW1kNjQKICBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogIG5hbWU6IGNvbnRyb2xQbGFuZQogIHJlcGxpY2FzOiAxCiAgcGxhdGZvcm06CiAgICBhd3M6CiAgICAgIHR5cGU6IG01LnhsYXJnZQpjb21wdXRlOgotIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgYXJjaGl0ZWN0dXJlOiBhbWQ2NAogIG5hbWU6ICd3b3JrZXInCiAgcmVwbGljYXM6IDAKbmV0d29ya2luZzoKICBjbHVzdGVyTmV0d29yazoKICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgIGhvc3RQcmVmaXg6IDIzCiAgbWFjaGluZU5ldHdvcms6CiAgLSBjaWRyOiAxMC4wLjAuMC8xNgogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnBsYXRmb3JtOgogIGF3czoKICAgIHJlZ2lvbjogYXAtc291dGhlYXN0LTIKcHVsbFNlY3JldDogIiIgIyBza2lwLCBoaXZlIHdpbGwgaW5qZWN0IGJhc2VkIG9uIGl0J3Mgc2VjcmV0cwpzc2hLZXk6ICIiICAgICAjIHNraXAsIGhpdmUgd2lsbCBpbmplY3QgYmFzZWQgb24gaXQncyBzZWNyZXRz 
type: Opaque
---
# Source: acm/templates/provision/secrets-common.yaml
apiVersion: v1
kind: Secret
metadata:
  name: azure-us-acm-provision-edge-install-config
data:
  # Base64 encoding of install-config yaml
  install-config.yaml: CgphcGlWZXJzaW9uOiB2MQptZXRhZGF0YToKICBuYW1lOiAnYXp1cmUtdXMnIApiYXNlRG9tYWluOiBibHVlcHJpbnRzLnJoZWNvZW5nLmNvbQpjb250cm9sUGxhbmU6CiAgYXJjaGl0ZWN0dXJlOiBhbWQ2NAogIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgbmFtZTogY29udHJvbFBsYW5lCiAgcmVwbGljYXM6IDMKICBwbGF0Zm9ybToKICAgIGF6dXJlOgogICAgICB0eXBlOiBTdGFuZGFyZF9EOHNfdjMKY29tcHV0ZToKLSBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogIGFyY2hpdGVjdHVyZTogYW1kNjQKICBuYW1lOiAnd29ya2VyJwogIHJlcGxpY2FzOiAzCiAgcGxhdGZvcm06CiAgICBhenVyZToKICAgICAgdHlwZTogU3RhbmRhcmRfRDhzX3YzCm5ldHdvcmtpbmc6CiAgY2x1c3Rlck5ldHdvcms6CiAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICBob3N0UHJlZml4OiAyMwogIG1hY2hpbmVOZXR3b3JrOgogIC0gY2lkcjogMTAuMC4wLjAvMTYKICBuZXR3b3JrVHlwZTogT1ZOS3ViZXJuZXRlcwogIHNlcnZpY2VOZXR3b3JrOgogIC0gMTcyLjMwLjAuMC8xNgpwbGF0Zm9ybToKICBhenVyZToKICAgIGJhc2VEb21haW5SZXNvdXJjZUdyb3VwTmFtZTogZG9qby1kbnMtem9uZXMKICAgIHJlZ2lvbjogZWFzdHVzCnB1bGxTZWNyZXQ6ICIiICMgc2tpcCwgaGl2ZSB3aWxsIGluamVjdCBiYXNlZCBvbiBpdCdzIHNlY3JldHMKc3NoS2V5OiAiIiAgICAgIyBza2lwLCBoaXZlIHdpbGwgaW5qZWN0IGJhc2VkIG9uIGl0J3Mgc2VjcmV0cw== 
type: Opaque
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
# This pushes out the HUB's Certificate Authorities on to the imported clusters
---
# Source: acm/templates/provision/clusterpool.yaml
apiVersion: hive.openshift.io/v1
kind: ClusterClaim
metadata:
  name: 'two-acm-provision-edge'
  annotations:
    argocd.argoproj.io/sync-wave: "20"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    cluster.open-cluster-management.io/createmanagedcluster: "true"
  labels:
    clusterClaimName: two-acm-provision-edge
    clusterGroup: region
spec:
  clusterPoolName: azure-us-acm-provision-edge
---
# Source: acm/templates/provision/clusterpool.yaml
apiVersion: hive.openshift.io/v1
kind: ClusterClaim
metadata:
  name: 'three-acm-provision-edge'
  annotations:
    argocd.argoproj.io/sync-wave: "20"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    cluster.open-cluster-management.io/createmanagedcluster: "true"
  labels:
    clusterClaimName: three-acm-provision-edge
    clusterGroup: region
spec:
  clusterPoolName: azure-us-acm-provision-edge
---
# Source: acm/templates/provision/clusterpool.yaml
apiVersion: hive.openshift.io/v1
kind: ClusterPool
metadata:
  name: "aws-ap-acm-provision-edge"
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    cloud: aws
    region: 'ap-southeast-2'
    vendor: OpenShift
    cluster.open-cluster-management.io/clusterset: aws-ap
spec:
  size: 3
  runningCount: 0
  baseDomain: blueprints.rhecoeng.com
  installConfigSecretTemplateRef:
    name: aws-ap-acm-provision-edge-install-config 
  imageSetRef:
    name: img4.10.18-multi-appsub
  pullSecretRef:
    name: aws-ap-acm-provision-edge-pull-secret
  skipMachinePools: true # Disable MachinePool as using custom install-config
  platform:
    aws:
      credentialsSecretRef:
        name: aws-ap-acm-provision-edge-creds
      region: ap-southeast-2
---
# Source: acm/templates/provision/clusterpool.yaml
apiVersion: hive.openshift.io/v1
kind: ClusterPool
metadata:
  name: "azure-us-acm-provision-edge"
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    cloud: azure
    region: 'eastus'
    vendor: OpenShift
    cluster.open-cluster-management.io/clusterset: azure-us
spec:
  size: 2
  runningCount: 2
  baseDomain: blueprints.rhecoeng.com
  installConfigSecretTemplateRef:
    name: azure-us-acm-provision-edge-install-config 
  imageSetRef:
    name: img4.10.18-multi-appsub
  pullSecretRef:
    name: azure-us-acm-provision-edge-pull-secret
  skipMachinePools: true # Disable MachinePool as using custom install-config
  platform:
    azure:
      credentialsSecretRef:
        name: azure-us-acm-provision-edge-creds
      region: eastus
---
# Source: acm/templates/provision/secrets-aws.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aws-ap-acm-provision-edge-creds
spec:
  dataFrom:
  - extract:
      # Expects entries called: aws_access_key_id and aws_secret_access_key
      key: secret/data/hub/aws
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: aws-ap-acm-provision-edge-creds
    creationPolicy: Owner
    template:
      type: Opaque
---
# Source: acm/templates/provision/secrets-aws.yaml
# For use when manually creating clusters with ACM
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aws-ap-acm-provision-edge-infra-creds
spec: 
  data:
  - secretKey: openshiftPullSecret
    remoteRef:
      key: secret/data/hub/openshiftPullSecret
      property: content
  - secretKey: awsKeyId
    remoteRef:
      key: secret/data/hub/aws
      property: aws_access_key_id
  - secretKey: awsAccessKey
    remoteRef:
      key: secret/data/hub/aws
      property: aws_secret_access_key
  - secretKey: sshPublicKey
    remoteRef:
      key: secret/data/hub/publickey
      property: content
  - secretKey: sshPrivateKey
    remoteRef:
      key: secret/data/hub/privatekey
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef: 
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: aws-ap-acm-provision-edge-infra-creds
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          cluster.open-cluster-management.io/credentials: ""
          cluster.open-cluster-management.io/type: aws
      data:
        baseDomain: "blueprints.rhecoeng.com"
        pullSecret: |-
          {{ .openshiftPullSecret | toString }}
        aws_access_key_id: |-
          {{ .awsKeyId | toString }}
        aws_secret_access_key: |-
          {{ .awsAccessKey | toString }}
        ssh-privatekey: |-
          {{ .sshPrivateKey | toString }}
        ssh-publickey: |-
          {{ .sshPublicKey | toString }}
        httpProxy: ""
        httpsProxy: ""
        noProxy: ""
        additionalTrustBundle: ""
---
# Source: acm/templates/provision/secrets-azure.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: azure-us-acm-provision-edge-creds
spec:
  data:
  - secretKey: azureOsServicePrincipal
    remoteRef:
      key: secret/data/hub/azureOsServicePrincipal
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: azure-us-acm-provision-edge-creds
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        osServicePrincipal.json: |-
          {{ .azureOsServicePrincipal | toString }}
---
# Source: acm/templates/provision/secrets-azure.yaml
# For use when manually creating clusters with ACM
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: azure-us-acm-provision-edge-infra-creds
spec: 
  data:
  - secretKey: openshiftPullSecret
    remoteRef:
      key: secret/data/hub/openshiftPullSecret
      property: content
  - secretKey: sshPublicKey
    remoteRef:
      key: secret/data/hub/publickey
      property: content
  - secretKey: sshPrivateKey
    remoteRef:
      key: secret/data/hub/privatekey
      property: content
  - secretKey: azureOsServicePrincipal
    remoteRef:
      key: secret/data/hub/azureOsServicePrincipal
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef: 
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: azure-us-acm-provision-edge-infra-creds
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          cluster.open-cluster-management.io/credentials: ""
          cluster.open-cluster-management.io/type: aws
      data:
        cloudName: AzurePublicCloud
        osServicePrincipal.json: |-
          {{ .azureOsServicePrincipal | toString }}
        baseDomain: "blueprints.rhecoeng.com"
        baseDomainResourceGroupName: "dojo-dns-zones"
        pullSecret: |-
          {{ .openshiftPullSecret | toString }}
        ssh-privatekey: |-
          {{ .sshPrivateKey | toString }}
        ssh-publickey: |-
          {{ .sshPublicKey | toString }}
        httpProxy: ""
        httpsProxy: ""
        noProxy: ""
        additionalTrustBundle: ""
---
# Source: acm/templates/provision/secrets-common.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aws-ap-acm-provision-edge-pull-secret
spec: 
  data:
  - secretKey: openshiftPullSecret
    remoteRef:
      key: secret/data/hub/openshiftPullSecret
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: aws-ap-acm-provision-edge-pull-secret
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |-
          {{ .openshiftPullSecret | toString }}
---
# Source: acm/templates/provision/secrets-common.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aws-ap-acm-provision-edge-ssh-private-key
spec:
  data:
  - secretKey: sshPrivateKey
    remoteRef:
      key: secret/data/hub/privatekey
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: aws-ap-acm-provision-edge-ssh-private-key
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        ssh-privatekey: |-
          {{ .sshPrivateKey | toString }}
---
# Source: acm/templates/provision/secrets-common.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: azure-us-acm-provision-edge-pull-secret
spec: 
  data:
  - secretKey: openshiftPullSecret
    remoteRef:
      key: secret/data/hub/openshiftPullSecret
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: azure-us-acm-provision-edge-pull-secret
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |-
          {{ .openshiftPullSecret | toString }}
---
# Source: acm/templates/provision/secrets-common.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: azure-us-acm-provision-edge-ssh-private-key
spec:
  data:
  - secretKey: sshPrivateKey
    remoteRef:
      key: secret/data/hub/privatekey
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: azure-us-acm-provision-edge-ssh-private-key
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        ssh-privatekey: |-
          {{ .sshPrivateKey | toString }}
---
# Source: acm/templates/provision/clusterpool.yaml
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: ManagedClusterSet
metadata:
  annotations:
    cluster.open-cluster-management.io/submariner-broker-ns: acm-provision-edge-broker
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: acm-provision-edge
spec:
  clusterSelector:
    selectorType: LegacyClusterSetLabel
---
# Source: acm/templates/multiclusterhub.yaml
apiVersion: operator.open-cluster-management.io/v1
kind: MultiClusterHub
metadata:
  name: multiclusterhub
  namespace: open-cluster-management
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    installer.open-cluster-management.io/mce-subscription-spec: '{"source": "redhat-operators" }'
spec: {}
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: acm-hub-ca-policy-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: acm-hub-ca-policy-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: acm-hub-ca-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: acm-edge-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: acm-edge-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: acm-edge-clustergroup-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: acm-provision-edge-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: acm-provision-edge-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: acm-provision-edge-clustergroup-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/ocp-gitops-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: openshift-gitops-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: openshift-gitops-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: openshift-gitops-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: acm-hub-ca-policy-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: local-cluster
        operator: NotIn
        values:
          - 'true'
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: acm-edge-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchLabels:
      clusterGroup: acm-region
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: acm-provision-edge-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchLabels:
      clusterGroup: region
---
# Source: acm/templates/policies/ocp-gitops-policy.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: openshift-gitops-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: vendor
        operator: In
        values:
          - OpenShift
      - key: local-cluster
        operator: NotIn
        values:
          - 'true'
---
# Source: acm/templates/policies/acm-hub-ca-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-hub-ca-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acm-hub-ca-config-policy
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: Secret
                apiVersion: v1
                type: Opaque
                metadata:
                  name: hub-ca
                  namespace: imperative
                data:
                  hub-kube-root-ca.crt: '{{hub fromConfigMap "" "kube-root-ca.crt" "ca.crt" | base64enc hub}}'
                  hub-openshift-service-ca.crt: '{{hub fromConfigMap "" "openshift-service-ca.crt" "service-ca.crt" | base64enc hub}}'
---
# Source: acm/templates/policies/application-policies.yaml
# TODO: Also create a GitOpsCluster.apps.open-cluster-management.io
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-edge-clustergroup-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acm-edge-clustergroup-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                apiVersion: argoproj.io/v1alpha1
                kind: Application
                metadata:
                  name: mypattern-acm-edge
                  namespace: openshift-gitops
                  finalizers:
                  - resources-finalizer.argocd.argoproj.io/foreground
                spec:
                  project: default
                  source:
                    repoURL: https://github.com/pattern-clone/mypattern
                    targetRevision: main
                    path: common/clustergroup
                    helm:
                      ignoreMissingValueFiles: true
                      valueFiles:
                        - "/values-global.yaml"
                        - "/values-acm-edge.yaml"
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}.yaml'
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}-{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}.yaml'
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}-acm-edge.yaml'
                        # We cannot use $.Values.global.clusterVersion because that gets resolved to the
                        # hub's cluster version, whereas we want to include the spoke cluster version
                        - '/values-{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}-acm-edge.yaml'
                      parameters:
                      - name: global.repoURL
                        value: $ARGOCD_APP_SOURCE_REPO_URL
                      - name: global.targetRevision
                        value: $ARGOCD_APP_SOURCE_TARGET_REVISION
                      - name: global.namespace
                        value: $ARGOCD_APP_NAMESPACE
                      - name: global.pattern
                        value: mypattern
                      - name: global.hubClusterDomain
                        value: apps.hub.example.com
                      - name: global.localClusterDomain
                        value: '{{ (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain }}'
                      # Requires ACM 2.6 or higher
                      - name: global.clusterDomain
                        value: '{{ (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain | replace "apps." "" }}'
                      # Requires ACM 2.6 or higher (I could not come up with something less terrible to get maj.min)
                      - name: global.clusterVersion
                        value: '{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}'
                      - name: global.localClusterName
                        value: '{{ (split "." (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain)._1 }}'
                      - name: global.clusterPlatform
                        value: aws
                      - name: clusterGroup.name
                        value: acm-edge
                      - name: clusterGroup.isHubCluster
                        value: "false"
                  destination:
                    server: https://kubernetes.default.svc
                    namespace: mypattern-acm-edge
                  syncPolicy:
                    automated:
                      prune: false
                      selfHeal: true
                    retry:
                      limit: 20
                  ignoreDifferences:
                  - group: apps
                    kind: Deployment
                    jsonPointers:
                    - /spec/replicas
                  - group: route.openshift.io
                    kind: Route
                    jsonPointers:
                    - /status
---
# Source: acm/templates/policies/application-policies.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-provision-edge-clustergroup-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acm-provision-edge-clustergroup-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                apiVersion: argoproj.io/v1alpha1
                kind: Application
                metadata:
                  name: mypattern-acm-provision-edge
                  namespace: openshift-gitops
                  finalizers:
                  - resources-finalizer.argocd.argoproj.io/foreground
                spec:
                  project: default
                  source:
                    repoURL: https://github.com/pattern-clone/mypattern
                    targetRevision: main
                    path: common/clustergroup
                    helm:
                      ignoreMissingValueFiles: true
                      valueFiles:
                        - "/values-global.yaml"
                        - "/values-acm-provision-edge.yaml"
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}.yaml'
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}-{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}.yaml'
                        - '/values-{{ (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").spec.platformSpec.type }}-acm-provision-edge.yaml'
                        # We cannot use $.Values.global.clusterVersion because that gets resolved to the
                        # hub's cluster version, whereas we want to include the spoke cluster version
                        - '/values-{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}-acm-provision-edge.yaml'
                      parameters:
                      - name: global.repoURL
                        value: $ARGOCD_APP_SOURCE_REPO_URL
                      - name: global.targetRevision
                        value: $ARGOCD_APP_SOURCE_TARGET_REVISION
                      - name: global.namespace
                        value: $ARGOCD_APP_NAMESPACE
                      - name: global.pattern
                        value: mypattern
                      - name: global.hubClusterDomain
                        value: apps.hub.example.com
                      - name: global.localClusterDomain
                        value: '{{ (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain }}'
                      # Requires ACM 2.6 or higher
                      - name: global.clusterDomain
                        value: '{{ (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain | replace "apps." "" }}'
                      # Requires ACM 2.6 or higher (I could not come up with something less terrible to get maj.min)
                      - name: global.clusterVersion
                        value: '{{ printf "%d.%d" ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Major) ((semver (lookup "operator.openshift.io/v1" "OpenShiftControllerManager" "" "cluster").status.version).Minor) }}'
                      - name: global.localClusterName
                        value: '{{ (split "." (lookup "config.openshift.io/v1" "Ingress" "" "cluster").spec.domain)._1 }}'
                      - name: global.clusterPlatform
                        value: aws
                      - name: clusterGroup.name
                        value: acm-provision-edge
                      - name: clusterGroup.isHubCluster
                        value: "false"
                  destination:
                    server: https://kubernetes.default.svc
                    namespace: mypattern-acm-provision-edge
                  syncPolicy:
                    automated:
                      prune: false
                      selfHeal: true
                    retry:
                      limit: 20
                  ignoreDifferences:
                  - group: apps
                    kind: Deployment
                    jsonPointers:
                    - /spec/replicas
                  - group: route.openshift.io
                    kind: Route
                    jsonPointers:
                    - /status
---
# Source: acm/templates/policies/ocp-gitops-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: openshift-gitops-policy
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.DS Data Security
    policy.open-cluster-management.io/controls: PR.DS-1 Data-at-rest
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-gitops-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                # This is an auto-generated file. DO NOT EDIT
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  name: openshift-gitops-operator
                  namespace: openshift-operators
                  labels:
                    operators.coreos.com/openshift-gitops-operator.openshift-operators: ''
                spec:
                  channel: gitops-1.8
                  installPlanApproval: Automatic
                  name: openshift-gitops-operator
                  source: redhat-operators
                  sourceNamespace: openshift-marketplace
                  config:
                    env:
                      - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
                        value: "*"
